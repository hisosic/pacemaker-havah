#! /bin/bash
#
# HAVAH Validator start/stop
#

CWD=$(pwd)
DOCKER_COMPOSE=`which docker-compose`
BACKUP_ADDR="hx02xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"   ## BACKUP 노드 지갑주소
KEY_NAME="backup_keystore.json"     ## BACKUP 지갑 파일이름
KEY_PASSWORD="password123!@#"       ## BACKUP 지갑 패스워드
TAG="chain-node"
CON_NAME="havah-chain-node"
ROLE="0"

cd /app/${CON_NAME}

LOG_FILE="./logs/pcs_resource.log"
DOWNLOAD_LOG=$(stat -c %Y "./logs/download.log")

write_log() {
  local log=$1
  echo "[backup] $(date) $log" >> $LOG_FILE
}

    write_log "=================================== havah_backup ======================================="
# See how we were called.
case "$1" in

start)
    write_log "--------------------------------------- start ------------------------------------------"
    if [ -f docker-compose.yml ] && [ $(docker ps | grep ${CON_NAME} | wc -l) = 0 ] ; then
        write_log ".env 생성"
        function set_env() {
          local key="$1"
          local value="$2"
          if ! grep -q "^${key}=" .env 2>/dev/null; then
            echo "${key}=${value}" >> .env
          else
            sed -i "s/^${key}=.*$/${key}=${value//&/\\&}/" .env
          fi
        }
        
        set_env "TAG" "${TAG}"
        set_env "KEY_NAME" "${KEY_NAME}"
        set_env "KEY_PASSWORD" "${KEY_PASSWORD}"
        set_env "ROLE" "${ROLE}"


        write_log "sleep 1"
	sleep 1;
        write_log "docker-compose up"
        $DOCKER_COMPOSE -f docker-compose.yml up -d
        write_log "sleep 15"
        sleep 15;
    fi
    ;;

stop)
    write_log "-------------------------------------- stop ------------------------------------------"
    if [ -f docker-compose.yml ] && [ $(docker ps | grep ${CON_NAME} | wc -l) != 0 ] ; then
        write_log "docker-compose down"
    	$DOCKER_COMPOSE -f docker-compose.yml down
    fi
    ;;

status)
    write_log "------------------------------------- status -----------------------------------------"
    if [[ $(date +%s) -lt "$((DOWNLOAD_LOG + 60))" ]]; then
        write_log "Havah DB Downloading..."
    else
        addchk=`curl -s --max-time 20 http://localhost:9000/admin/system | jq -r .setting.address`
        write_log "addchk = $addchk"
        if [ "$addchk" == "$BACKUP_ADDR" ] ;then
            write_log "$addchk == $BACKUP_ADDR"
            exit 0
        else
            exit 3
        fi
    fi
    ;;

restart|force-reload)
    write_log "------------------------------------- restart -------------------------------------------"
    cd "$CWD"
    $0 stop
    $0 start
    rc=$?
    ;;
*)
    echo $"Usage: $0 {start|stop|status|restart|force-reload}"
    write_log "exit 2"
    exit 2
esac

exit $rc

